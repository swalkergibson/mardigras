<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class OauthSessions extends \Entities\OauthSessions implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setClientId($clientId)
    {
        $this->__load();
        return parent::setClientId($clientId);
    }

    public function getClientId()
    {
        $this->__load();
        return parent::getClientId();
    }

    public function setRedirectUri($redirectUri)
    {
        $this->__load();
        return parent::setRedirectUri($redirectUri);
    }

    public function getRedirectUri()
    {
        $this->__load();
        return parent::getRedirectUri();
    }

    public function setOwnerType($ownerType)
    {
        $this->__load();
        return parent::setOwnerType($ownerType);
    }

    public function getOwnerType()
    {
        $this->__load();
        return parent::getOwnerType();
    }

    public function setOwnerId($ownerId)
    {
        $this->__load();
        return parent::setOwnerId($ownerId);
    }

    public function getOwnerId()
    {
        $this->__load();
        return parent::getOwnerId();
    }

    public function setAccessToken($accessToken)
    {
        $this->__load();
        return parent::setAccessToken($accessToken);
    }

    public function getAccessToken()
    {
        $this->__load();
        return parent::getAccessToken();
    }

    public function setAuthCode($authCode)
    {
        $this->__load();
        return parent::setAuthCode($authCode);
    }

    public function getAuthCode()
    {
        $this->__load();
        return parent::getAuthCode();
    }

    public function setRefreshToken($refreshToken)
    {
        $this->__load();
        return parent::setRefreshToken($refreshToken);
    }

    public function getRefreshToken()
    {
        $this->__load();
        return parent::getRefreshToken();
    }

    public function setAccessTokenExpires($accessTokenExpires)
    {
        $this->__load();
        return parent::setAccessTokenExpires($accessTokenExpires);
    }

    public function getAccessTokenExpires()
    {
        $this->__load();
        return parent::getAccessTokenExpires();
    }

    public function setStage($stage)
    {
        $this->__load();
        return parent::setStage($stage);
    }

    public function getStage()
    {
        $this->__load();
        return parent::getStage();
    }

    public function setFirstRequested($firstRequested)
    {
        $this->__load();
        return parent::setFirstRequested($firstRequested);
    }

    public function getFirstRequested()
    {
        $this->__load();
        return parent::getFirstRequested();
    }

    public function setLastUpdated($lastUpdated)
    {
        $this->__load();
        return parent::setLastUpdated($lastUpdated);
    }

    public function getLastUpdated()
    {
        $this->__load();
        return parent::getLastUpdated();
    }

    public function setSessionScopes(\Entities\OauthSessionScopes $sessionScopes)
    {
        $this->__load();
        return parent::setSessionScopes($sessionScopes);
    }

    public function getSessionScopes()
    {
        $this->__load();
        return parent::getSessionScopes();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'clientId', 'redirectUri', 'ownerType', 'ownerId', 'accessToken', 'authCode', 'refreshToken', 'accessTokenExpires', 'stage', 'firstRequested', 'lastUpdated', 'sessionScopes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}