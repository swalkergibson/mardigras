<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Invoices extends \Entities\Invoices implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTransactionDate($transactionDate)
    {
        $this->__load();
        return parent::setTransactionDate($transactionDate);
    }

    public function getTransactionDate()
    {
        $this->__load();
        return parent::getTransactionDate();
    }

    public function setSaleTotal($saleTotal)
    {
        $this->__load();
        return parent::setSaleTotal($saleTotal);
    }

    public function getSaleTotal()
    {
        $this->__load();
        return parent::getSaleTotal();
    }

    public function setTax($tax)
    {
        $this->__load();
        return parent::setTax($tax);
    }

    public function getTax()
    {
        $this->__load();
        return parent::getTax();
    }

    public function setBalanceDue($balanceDue)
    {
        $this->__load();
        return parent::setBalanceDue($balanceDue);
    }

    public function getBalanceDue()
    {
        $this->__load();
        return parent::getBalanceDue();
    }

    public function setRentDep($rentDep)
    {
        $this->__load();
        return parent::setRentDep($rentDep);
    }

    public function getRentDep()
    {
        $this->__load();
        return parent::getRentDep();
    }

    public function setDepositCard($depositCard)
    {
        $this->__load();
        return parent::setDepositCard($depositCard);
    }

    public function getDepositCard()
    {
        $this->__load();
        return parent::getDepositCard();
    }

    public function setDepositCardExp($depositCardExp)
    {
        $this->__load();
        return parent::setDepositCardExp($depositCardExp);
    }

    public function getDepositCardExp()
    {
        $this->__load();
        return parent::getDepositCardExp();
    }

    public function setClerk(\Entities\Clerks $clerk)
    {
        $this->__load();
        return parent::setClerk($clerk);
    }

    public function getClerk()
    {
        $this->__load();
        return parent::getClerk();
    }

    public function setInvoiceStatus(\Entities\InvoiceStatus $invoiceStatus)
    {
        $this->__load();
        return parent::setInvoiceStatus($invoiceStatus);
    }

    public function getInvoiceStatus()
    {
        $this->__load();
        return parent::getInvoiceStatus();
    }

    public function setDepositMethod(\Entities\DepositMethods $depositMethod = NULL)
    {
        $this->__load();
        return parent::setDepositMethod($depositMethod);
    }

    public function getDepositMethod()
    {
        $this->__load();
        return parent::getDepositMethod();
    }

    public function setCustomer(\Entities\Customers $customer)
    {
        $this->__load();
        return parent::setCustomer($customer);
    }

    public function getCustomer()
    {
        $this->__load();
        return parent::getCustomer();
    }

    public function setInvoiceItems(\Entities\InvoiceItems $invoiceItems)
    {
        $this->__load();
        return parent::setInvoiceItems($invoiceItems);
    }

    public function getInvoiceItems()
    {
        $this->__load();
        return parent::getInvoiceItems();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'transactionDate', 'saleTotal', 'tax', 'balanceDue', 'rentDep', 'depositCard', 'depositCardExp', 'clerk', 'invoiceStatus', 'depositMethod', 'customer', 'invoiceItems');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}