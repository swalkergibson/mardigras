<?php

namespace Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Vendors extends \Vendors implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setContact($contact)
    {
        $this->__load();
        return parent::setContact($contact);
    }

    public function getContact()
    {
        $this->__load();
        return parent::getContact();
    }

    public function setAddress1($address1)
    {
        $this->__load();
        return parent::setAddress1($address1);
    }

    public function getAddress1()
    {
        $this->__load();
        return parent::getAddress1();
    }

    public function setAddress2($address2)
    {
        $this->__load();
        return parent::setAddress2($address2);
    }

    public function getAddress2()
    {
        $this->__load();
        return parent::getAddress2();
    }

    public function setCityState($cityState)
    {
        $this->__load();
        return parent::setCityState($cityState);
    }

    public function getCityState()
    {
        $this->__load();
        return parent::getCityState();
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setZip($zip)
    {
        $this->__load();
        return parent::setZip($zip);
    }

    public function getZip()
    {
        $this->__load();
        return parent::getZip();
    }

    public function setPhone($phone)
    {
        $this->__load();
        return parent::setPhone($phone);
    }

    public function getPhone()
    {
        $this->__load();
        return parent::getPhone();
    }

    public function setFax($fax)
    {
        $this->__load();
        return parent::setFax($fax);
    }

    public function getFax()
    {
        $this->__load();
        return parent::getFax();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setMgAccountNum($mgAccountNum)
    {
        $this->__load();
        return parent::setMgAccountNum($mgAccountNum);
    }

    public function getMgAccountNum()
    {
        $this->__load();
        return parent::getMgAccountNum();
    }

    public function setSalesRepName($salesRepName)
    {
        $this->__load();
        return parent::setSalesRepName($salesRepName);
    }

    public function getSalesRepName()
    {
        $this->__load();
        return parent::getSalesRepName();
    }

    public function setSalesRepPhone($salesRepPhone)
    {
        $this->__load();
        return parent::setSalesRepPhone($salesRepPhone);
    }

    public function getSalesRepPhone()
    {
        $this->__load();
        return parent::getSalesRepPhone();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'code', 'name', 'contact', 'address1', 'address2', 'cityState', 'city', 'state', 'zip', 'phone', 'fax', 'email', 'mgAccountNum', 'salesRepName', 'salesRepPhone');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}